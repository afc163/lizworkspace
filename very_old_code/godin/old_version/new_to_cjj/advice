今天我把godin又看了下，改了点，我先说一下情况：
1、二进制
现在Lattice.py中我还是用set操作，想转化成二进制位操作，写了个Bin_Set,只要把##的行去掉注释然后原来的语句注释掉，就可以运行了，但是我发现这个还是很慢，所以我写的Bin_Set需要改变，里面的getLength我改成移位计算个数了，改了后发现时间也没变少，所以我不知道接着该怎么改了。

2、数据结构
在以前的基础上我增加保存了每个概念的孩子节点和父亲，为了方便计算层次，增加了每个概念的层次号，去掉了边集合。并且也保存了每个层次的概念。另外，在加入一个object时，都是用object或者attribute的index号，输出时才将index转为对应的名称。

3、层次
层次的更新在addedge中更新，中间调了一个递归。然后测试了很多object数目，发现层次不会超过10层，都集中在中间。
在addobject中，我现在仍然是遍历所有节点，但是我写了个SelectAndClassifyPairs()，是按照层次来找的，但是用这个函数出来后概念明显减少，所以这里面不对。

4、空间和时间
我用top查看内存,100+20+0.3大概在5M左右；时间的话平均在1.5s左右；其中addobject时间最长，接着就是addedge，在换成1000对象数时，最大的时间还是在addobject上，addedge占的比例还是很少的，so最大的改进之处还在addobject中，也就是算法中，我很想改进这个算法。

5、对于这些：
蔡俊杰gtalk: 你分析，如果你的算法中出现了过多的for循环和if语句，那么这部分的目的是什么，是为了反复计算一个东西么，如果是，这个东西以后会用到么？如果是，这个东西可以存储下来么？存放到内存也好，存放到文件中也好

我看了各个for语句，里面的中间结果其实每次循环都是不一样的，所以应该不好保存下来。

最后，继续要改的地方是
1、集合运算：我现在的想法是用C++语言写一个集合操作类
2、遍历所有的概念这个肯定可以优化，所以SelectAndClassifyPairs()这个里面还有很多东西可以改
3、还有一个想法是，构格的时间复杂度能否整体降下来，而不是通过这些编程技术来优化

4、还有就是，我不能杂七杂八的都学了，像我前阵子在学点corba，mpi，这是因为我发现他们在python中也有对应的模块。wxpython我也看了点，但是这些实在是太风马牛不相及了，并且听了你上次说的和我同学说的，发现我自己学的东西怎么都没什么用呢，除了自己玩之外真的一点意义都没有，所以我想还是你给我任务，能够有目的的去学，虽然我知道这样会加重你的负担，我曾经包括现在也是很怕增加你的负担，但我发现靠我自己还是不行，因为我发现我对什么都很感兴趣，一点都不专一，我要改正这点，好好学个东西。好了，就这些了

什么是休眠数据，粒度的关系，管理休眠数据

管理如何建立元数据 作用



