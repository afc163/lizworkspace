http://www.debian.org/doc/manuals/apt-howto/

sudo aptitude install
sudo update-alternatives --config java
sudo update-alternatives --config javac

	apt-cache search package 搜索包

　　apt-cache show package 获取包的相关信息，如说明、大小、版本等

　　sudo apt-get install package 安装包

　　sudo apt-get install package - - reinstall 重新安装包

　　sudo apt-get -f install 修复安装"-f = ――fix-missing"

　　sudo apt-get remove package 删除包

　　sudo apt-get remove package - - purge 删除包，包括删除配置文件等

　　sudo apt-get update 更新源

　　sudo apt-get upgrade 更新已安装的包

　　sudo apt-get dist-upgrade 升级系统

　　sudo apt-get dselect-upgrade 使用 dselect 升级

　　apt-cache depends package 了解使用依赖

　　apt-cache rdepends package 是查看该包被哪些包依赖

　　sudo apt-get build-dep package 安装相关的编译环境

　　apt-get source package 下载该包的源代码

　　sudo apt-get clean && sudo apt-get autoclean 清理无用的包

　　sudo apt-get check 检查是否有损坏的依赖

　　其中：

　　1 有SUDO的表示需要管理员特权！

　　2 在UBUNTU中命令后面参数为短参数是用“-”引出，长参数用“--”引出

　　3 命令帮助信息可用man 命令的方式查看或者

　　命令 -H（――help）方式查看

　　4 在MAN命令中需要退出命令帮助请按“q”键！！

　　选项 含义 作用

　　sudo -h Help 列出使用方法，退出。

　　sudo -V Version 显示版本信息，并退出。

　　sudo -l List 列出当前用户可以执行的命令。只有在sudoers里的用户才能使用该选项。

　　sudo -u username|#uid User 以指定用户的身份执行命令。后面的用户是除root以外的，可以是用户名，也可以是#uid。

　　sudo -k Kill 清除“入场卷”上的时间，下次再使用sudo时要再输入密码。

　　sudo -K Sure kill 与-k类似，但是它还要撕毁“入场卷”，也就是删除时间戳文件。

　　sudo -b command Background 在后台执行指定的命令。

　　sudo -p prompt command Prompt 可以更改询问密码的提示语，其中%u会代换为使用者帐号名称，%h会显示主机名称。非常人性化的设计。

　　sudo -e file Edit 不是执行命令，而是修改文件，相当于命令sudoedit。



Debian新手apt-get/dpkg简明入门

简略翻译，原文在 All about Linux的Blog上。其实，这里有个更全的早就翻译过的APT HOWTO，强烈推荐。

Debian是最早的Linux发行版之一。它能引起公众注意就因为它让安装与卸载软件非常简单。在其他发行版还陷在依赖性的泥潭里时，Debian用户因为有更好的包管理系统而免受这些困扰。

所有基于Debian的发行都使用这个包管理系统。Deb包可以把一个应用的文件包在一起，大体就如同Windows上的安装文件。这里要介绍的就是如何使用安装包处理软件来达到我们的目的。

用apt-get的第一步就是引入必需的软件库，Debian的软件库也就是所有Debian软件包的集合，它们存在互联网上的一些公共站点上。把它们的地址加入，apt-get就能搜索到我们想要的软件。/etc/apt/sources.list是存放这些地址列表的配置文件，其格式如下：

deb [web或ftp地址] [发行版名字][main/contrib/non-free]

比如Ubuntu是一个基于Debian的发行，它的Sources.list可以是这样的：

deb http://in.archive.ubuntu.com/ubuntu breezy main restrcted

你可以自己加上自己的地址。apt-get.org 上面有一些不错的地址列表。

设好地址之后，就要把本机上的软件库跟网上的库同步（只是软件描述信息，不包含软件本身）。这样，本机上就有了一个可用的软件的清单，命令如下：

# apt-get update

运行成功之后，你就可以搜到在你的发行版中有哪些软件了，命令是apt-cache，运行这个命令是在本机是检索，而不连到网上。如：

# apt-cache search baseutils

这个命令可以列出baseutils这个软件包的情况，有还是没有，还有版本等。

看到库里有这个软件包后，就可以安装它：

# apt-get install baseutils

这时我们就可以看到apt-get的威力了。如果baseutils依赖于某个另外的软件，或者一个运行库xyz.0.01.so，apt-get会自动下载这个包（或含有这个库的软件包）。这叫做自动依赖性处理。通常，如果你只用Debian软件库内的软件，是不会发生找不到包或包版本不对的情况的，除非用的是正在开发的Testing或Unstable版本。

卸载软件：

# apt-get remove baseutils

如果想看一下库里有多少软件：

# apt-cache stats
Total package names : 22502 (900k)
Normal packages: 17632
Pure virtual packages: 281
Single virtual packages: 1048
Mixed virtual packages: 172
Missing: 3369
...

把本机所有软件升级到最新版：

# apt-get upgrade

最后是最强力的－－把整个发行版都升到新版本：

# apt-get dist-upgrade

升级时注意那些影响系统起动的东西，比如升级了内核，升级了grub或lilo等，这之后你应当重新运行grub或是lilo，让它们指向正确的位置，否则升级之后会工作不正常的。

用apt-get安装软件时，它会从网上（在sources.list里指的那个站点）下载所用的软件包，这个包将存在本机上，目录是：/var/cache/apt/archives/。时间长了，这里会变得非常巨大，占用大量的硬盘空间。要想清理这个目录，可以运行：

# apt-get clean

还有一个自动清理功能，它只清除那些没用的或者是不完整的软件包：

# apt-get autoclean

这样在重装某软件时就依然能使用已经下载好的，而不是再到网上去下载。

dpkg － 底层一些的包管理工具

用上apt（高级包管理工具）之后，一般是不需要处理单个的deb文件的。如果需要，就要用dpkg命令。比如想自己装gedit：

# dpkg -i gedit-2.12.1.deb

卸载：

# dpkg -r gedit

这里只写名字即可。还可以加上--purge(-P)标志：

# dpkg -P gedit

这会连同gedit的配置文件一起删除，只用-r的话是不删除配置文件的。

如果不想安装一个deb包，但想看一下它里面有什么文件：

# dpkg -c gedit-2.12.1.deb

如果想多看点信息：

# dpkg -I gedit-2.12.1.deb

也可以用通配符来列出机器上的软件：

# dpkg -l gcc*

这会列出所有gcc开头的软件包：
Desired=Unknown/Install/Remove/Purge/Hold
Status=Not/Installed/Config-files/Unpacked/Failed-config/.
/ Err?=(none)/Hold/Reinst-required/X=both-problems
/ Name Version Description
+++-===============-==============-========================
ii gcc 4.0.1-3 The GNU C compiler
ii gcc-3.3-base 3.3.6-8ubuntu1 The GNU Compiler Colletio
un gcc-3.5 none (no description available)

其中，第1个 i 表示希望安装，第2个 i 表示已经安装，第3个字段是问题（如果有）（这3个字的含义可以看上面那3行，desired, status, err），后面是名字，版本和描述。un就表示，Unknown, not-installed。

如果想看某包是否已经安装：

# dpkg -s gedit

如果想看某软件都有哪些文件，都装到了什么地方：

# dpkg -L gedit

如果只想看其中的某些文件，就加上Grep：

# dpkg -L gedit grep png

当然还有aptitude和Aptitude，前者是终端上运行的带菜单的工具，后者是X窗口上运行的图形化的程序。

还有，列出某包的详情：apt-cache show gedit
一些强制的命令：dpkg --force-help 
