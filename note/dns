$TTL 1D
$ORIGIN lizzie.com
@ IN SOA hi.lizzie.com. {
  shengyan1985.gmail.com. ; 主授权服务器的名称
  2008083001              ; 序号
  2H                      ; 更新周期
  15M                     ; 重试间隔
  4W                      ; 逾期时限
  30M                     ; 默认存活时间
}

;
; Name Servers
@    IN NS hi


## page was renamed from ObpLovelyPython/LpyAttach-residx
##language:zh
#pragma section-numbers off
##含有章节索引导航的 ZPyUG 文章通用模板
[[TableOfContents]]
## 默许导航,请保留
##[[Include(ZPyUGnav)]]

##|校对|正式 
||'''status'''|| 草稿|| ZoomQuiet,Liz|| 完成度:55% ||

##startInc
= Python 资源索引 =
经过十数年的发展积累,Python 应用的触角早已深入了各个领域! 在网络中的资源也浩如烟海:
 * 图atta2-1 使用Google 搜索Python 时的反馈
attachment:2008-10-14-google-python.png

在此行者们也只能根据自己的实际开发体验,推荐一些常见领域的优秀资源给好奇的读者们;-)

 资源集锦::
  有些资料是索引的索引,指向大量网站和索引,帮助大家快速了解Python 的丰厚,特此推荐:
  1.  '''Python 快速介绍'''^Limodou和Zoom.Quiet 合写^
   * 访问地址: http://www.zoomquiet.org/share/s5/intropy/
   * 精巧地址: http://bit.ly/41i72J
  1. `有关Python 的成功故事` ^官方网站收集组织^
   * 访问地址: http://www.python.org/about/success/
   * 精巧地址: http://bit.ly/21PDa9

以下,使用粗略的领域分类,来展示不同层次相关应用的Python 技术:

== Py 语言自身 ==
`就Python 语言本身的学习参考资源`

 常备::
  建议放在手边随时看的:
  * Python Tutorial 中文版
   * 访问地址: http://wiki.woodpecker.org.cn/moin/March_Liu/PyTutorial
   * 精巧地址: http://bit.ly/1rzx1n
   * Python 教程是世上唯一 Guido van Rossum 撰写的文档!这里是由知名行者刘鑫长期维护的中文版本;
  * 简明 Python 教程 中文版
   * 访问地址: http://www.woodpecker.org.cn/share/doc/abyteofpython_cn/chinese/index.html
   * 精巧地址: http://bit.ly/4zQc4a
   * 印度程序员的个人Python体验和学习教程
  * Python 绝对简明手册
   * 访问地址: http://wiki.woodpecker.org.cn/moin/PyAbsolutelyZipManual
   * 精巧地址: http://bit.ly/2EEz6I
   * 网络人称`张教主`的'''zsp007@gmail.com''' 根据自个儿的使用体验,将Python 语言中最最常用的语法使用整理而成;
  * Py标准库手册
   * 访问地址: http://wiki.woodpecker.org.cn/moin/PythonStandardLib
   * 精巧地址: http://bit.ly/4iH5V5
   * 由 `Python江湖QQ群` 集体翻译的Python 2.0 标准模块库说明
  
 深入::
  在开发过程中,应该精读的:
  * Dive into Python
   * 访问地址: http://www.woodpecker.org.cn/diveintopython/
   * 精巧地址: http://bit.ly/2H4vrR
   * 深入Python ~ 简称`DiP`,是知名称最高的Python 编程技巧图书,使用几个不断演进的实例,从方方面面讲解Python 最细微处的开发技巧,不向初学者推荐;
  * Python开发编码规范
   * 访问地址: http://wiki.woodpecker.org.cn/moin/PythonCodingRule
   * 精巧地址:  http://bit.ly/3HURoL
   * 是官方增进方案 PEP 008 "Style Guide for Python Code" 的中文翻译!
    * 原文地址: http://www.python.org/dev/peps/pep-0008/
    * 精巧地址: http://bit.ly/2OQ8Z3
   * 对开发Python 应用脚本,代码的组织给出了非常详进的建议
  * ASPN:Python
   * 访问地址: http://aspn.activestate.com/ASPN/Python
   * 精巧地址: http://bit.ly/3UMD8w
   * `ASPN` 就是 ActivePython 套件的出品公司组织的网站,汇集了大量E文资料,其中的 CookBook 非常实用,有什么问题搜查一下就好;
  * Python 之优雅与瑕疵: 
   * 访问地址: http://wiki.woodpecker.org.cn/moin/PyBlemish
   * 精巧地址: http://bit.ly/4jvqeV
   * 是Python 专家 `David Mertz`的私人总结,针对Python 2.* 版本对 1.5.* 版本间变更较重大的语言部分进行了讲解;Python 本身隐密的角落相比其它语言要少的多,但是总是有可能会遇到的,幸好总是有好心人进行了分享;应该及时吸收;
   
 前沿::
  Python 是个高速发展的语言,本身在进行什么样的发展?未来将会如何?都是应该深入关注的:
  * Python Enhancement Proposals
   * 访问地址: http://www.python.org/dev/peps/
   * 精巧地址: http://bit.ly/fwcW8
   * Python 增进提案库 ~ 缩写 PEPs ; 是Python 最前沿和最官方的特性讨论中心,关心Python 未来趋势,以及现有技术细核的读者,应该认真学习;
  * Python 3000 进度报告
   * 访问地址: http://wiki.woodpecker.org.cn/moin/Py3000StatusUpdate
   * 精巧地址: http://bit.ly/2IwaEp
   * Guido 亲自通告的 Python 3000 开发情况(啄木鸟社区翻译版本),Python 3000 或是说Py3k 是一个准备重新再写的一个分支,和过往的2.* 系列版本不准备兼容,是 Guido 准备一次性解决 Python 一些固有问题的勇敢的计划;
   * 对应的最新开发版本下载: Python 3.0rc1 Release
    * 访问地址: http://www.python.org/download/releases/3.0/
    * 精巧地址: http://bit.ly/1a3p5I
  * Stackless.com
   * 访问地址: http://www.stackless.com/
   * 这是针对传统 CPython 对于线程保守态度的一个积极应对;通过对C语言实现的Python 进行小的改进,获得了:
    * 简化的线程开发
    * 微线程扩展支持
    * 并发建模工具
   * 而且和 CPython 是完全二进制兼容的,可以使用所有传统Python 的模块
   * 而且已经在一些企业级情景中得到了应用,经典的有:
    1. EVE Online ~ 大型多人在线实时战略游戏 http://www.eve-online.com/
    1. Sylphis3D ~ 3D游戏引擎 http://devnet.sylphis3d.com/
  * PyPy
   * 访问地址: http://codespeak.net/pypy/dist/pypy/doc/home.html
   * 精巧地址: http://bit.ly/1svoIm
   * 这是 程序语言中的"流氓" http://inet6.blogspot.com/2007/03/pypy.html
    * 精巧地址: http://bit.ly/4h9uCA
    * 因为和其它开发语言相比, PyPy 根本是在作弊 ;) 简单的说:
     1. PyPy是用Python 编写的 Python 语言(自称rpython)
     1. PyPy能将Python 脚本编译成原生的 C/.net(2.0)/javascript 等其它语言代码
     1. PyPy能将rpython 脚本编译成 javascript,用以生成客户端Ajax 应用
     1. PyPy能将rpython 脚本流程展示成视图
     1. 可以通过 JIT 自制编译器
    * 即! PyPy 通过Python 实现了,将Py语法组织的脚本和其它任意语言自由转换! 也就是说 PyPy 可以支持人们用Python 开发出各种语言的应用! 实在太有才了,绝对应该关注!
   
== Py 文本处理 ==
`文可文,非常文. 本可文,非常本. 文本,数据之始;字符,万思之母...`~对文本的处理是最基础和最常见的任务,这方面Python 有大量的愉快体验:

 常备::
  日常#############################################################
  * PyXML: 
   * 访问地址: http://pyxml.sourceforge.net/topics/
   * 精巧地址: http://bit.ly/3Rf7ga
   * 
  * PyHtml: 
   * 访问地址: http://code.google.com/p/jrfonseca/wiki/PyHTML
   * 精巧地址: http://bit.ly/2XnwcO
  * ...
  
 深入::
  * Text Processing in Python: 
   * 访问地址: http://gnosis.cx/TPiP/
   * 精巧地址: http://bit.ly/3ZiI3k
  * Office
  * ReportLab: 
   * 访问地址: http://www.reportlab.org/
   * 精巧地址: http://bit.ly/PmJfm
  * ...
  
 前沿::
  * StructuredTex: 
   * 访问地址: http://www.zope.org//Members/jim/StructuredTextWiki/StructuredTextNGRules
   * 精巧地址: http://bit.ly/1NeDIF
  * AsciiDoc: 
   * 访问地址: http://www.methods.co.nz/asciidoc/index.html
   * 精巧地址: http://bit.ly/3QwcTD
  * ...

== Py DB应用 ==
只要是个产品化系统,多少都得和数据库打交道,Python 一直有全面支持:

 常备::
  常见DB产品支持,,,
  * ADOdb for Python
   * 访问地址: http://phplens.com/lens/adodb/adodb-py-docs.htm
   * 精巧地址: http://bit.ly/9bPgD
   * 源自PHP社区的跨DB操作支持模块,比较精巧稳定,主要使用 SQL和少量的常用操作函式;
  * MySQLdb:
   * 访问地址: 
   * 精巧地址: 
   * 它是MySQL数据库的Python接口
  * PostgreSQL: 
  * SQLite: 
  * ...
  
<<<<<<< .mine
 前沿::
  * ODB

== Py 图形应用 ==
 常备::
  * 成熟框架  matplotlib   pycairo
=======
>>>>>>> .r1829
 深入::
  进一步用OO方式操作关系DB的支持:
  * Python数据库开发概要: http://wiki.woodpecker.org.cn/moin/Py4Database
   * 精巧地址: http://bit.ly/IT9wY
  * ORM
<<<<<<< .mine
  * wxPython: 
  * tcl/tk: 
  * pygtk: 
  * pyqt: 
  * pyswt: 
  * pywin32: 
  * ctypes: 
=======
  * ...
  
>>>>>>> .r1829
 前沿::
  再进一步,直接用OO来组织自个儿的DB!
  * ODB
  * ZODB


== Py 网络应用 ==
进入互联网时代,和网络资源互动是基础要求,这方面 Python 有各种方面的支持:
 常备::
<<<<<<< .mine
  * 内置socketserver
  * httpserver
  * email
  * ftp
  * telnet
  * http
  * Twisted
  * Jabber
=======
  常见网络协议支持
  * 内置?
>>>>>>> .r1829
  * ...
  
 深入::
  快速网络应用开发:
  * Python WEB应用框架纵览: http://wiki.woodpecker.org.cn/moin/PyWebFrameList
   * 精巧地址: http://bit.ly/1U4oHm
  * CherryPy: http://wiki.woodpecker.org.cn/moin/CherryPyQuickIn
   * 精巧地址: http://bit.ly/1DGuQN
  * Django: http://docs.djangoproject.com/
   * 精巧地址: http://bit.ly/2fEoz8
  * TurboGears: http://wiki.woodpecker.org.cn/moin/TurboGearStepByStep
   * 精巧地址: http://bit.ly/1cTTYP
  * Karrigell: http://karrigell.sourceforge.net/en/front.htm
   * 精巧地址: http://bit.ly/2z3ejE
  * web2py: http://mdp.cti.depaul.edu/
   * 精巧地址: http://bit.ly/3x4nj9
  * web.py: http://www.dup2.org/files/web.py%200.2%20tutorial.html
   * 精巧地址: http://bit.ly/3RqqmN
  * Pylons: http://wiki.pylonshq.com/display/pylonsdocs/Home
   * 精巧地址:  http://bit.ly/3MqEPh
  * Quixote: http://wiki.woodpecker.org.cn/moin/QuixoteQuickIn
   * 精巧地址: http://bit.ly/3ZD3AW
  * Zope: http://wiki.woodpecker.org.cn/moin/Zope3Book
   * 精巧地址: http://bit.ly/265zEI
  * Uliweb: http://uliwebproject.appspot.com/
   * 精巧地址: http://bit.ly/dLsUk
  * ...
  
 前沿::
  高性能网络任务支持:
  * 邪派功法
  * GAE: http://code.google.com/appengine/docs/whatisgoogleappengine.html
   * 精巧地址: http://bit.ly/1Girr
  * ...
  

== Py 嵌入系统 ==
上网已经不在是电脑的专利,越来越多的设备/设施在联入网络,提供数据和接受控制,Python 在这方面也非常适合:

 常备::
  常见嵌入式设备支持:
  * 手机
  
 深入::
  嵌入式系统开发支持:
  * 嵌入系统
 前沿::
  * Android


== Py 图形应用 ==

 常备::
  * 成熟框架
 深入::
  * PIL: http://wiki.woodpecker.org.cn/moin/PythonImagingLibrary
   * 精巧地址: http://bit.ly/2iNDy0
  * PyOpenGL: http://pyopengl.sourceforge.net/
   * 精巧地址: http://bit.ly/2gOUKk
  * ...
  * 桌面
 前沿::
  * 3D,blander

== Py 扩展应用 ==
旧有系统的扩展/融合,需要 Python 这样优秀的"胶水语言":

 常备::
  * Swig: http://www.swig.org/doc.html
   * 精巧地址: http://bit.ly/4qUhgr
  * ctype
  
 深入::
  * PyRex: http://wiki.woodpecker.org.cn/moin/Pyrex
   * 精巧地址: http://bit.ly/1mICtd
  * PythonExtendingAndEmbedding: http://wiki.woodpecker.org.cn/moin/PythonExtendingAndEmbedding
   * 精巧地址: http://bit.ly/26MjGC
  * Psyco: http://psyco.sourceforge.net/
   * 精巧地址: http://bit.ly/3jrshT
  * ...
  
 前沿::
  * 动态 Jython

  * 原来Boo是一种有着python语法的.net语言，好处是公用CLI和.net其他语言互相协
作无间。。

我同事那个小组用了很久了，他老大用c#。他们在mono上跑，看来现在mono也相当
的成熟了，他们的都是生产上的应用。

Boo的logo挺讨人喜欢 :)
http://boo.codehaus.org/Language+Features

不知道在vs.net上面开发boo会不会很爽。
  
== Py 科学计算 ==
支持科研方面,Python 也从来没有落后:

 常备::
  * NumPy: http://numpy.scipy.org/numpybook.pdf
   * 精巧地址: http://bit.ly/10u2O0
  * SciPy: http://www.scipy.org/
   * 精巧地址: http://bit.ly/4Bg9RA
  * ...
  
 深入::
  * 数学
  * SAGE: http://sagemath.org/
   * 精巧地址: http://bit.ly/3SNn9Z
Software for Algebra and Geometry Experimentation (SAGE) 是使用 Python 语言编写的，并使用交互式的 Python Shell 作为其用户界面。SAGE 的独特之处在于，它能够用作其他各种计算机代数系统的集成器，从而允许用户利用不同软件包的各自强项。
  * ...
 前沿::
  * 生物
Download - BioPython
http://biopython.org/wiki/Download
http://bit.ly/Ipaud
== Py 工程应用 ==
Python 对于非IT行业,一样有成功的支持:

 常备::
  * 模块
 深入::
  * 产品
 前沿::
  * ??

== Py 教育支持 ==
`十年树木,百年树人. 国之大计,教育为本!` Python 以其好学易用的特性,在教育的各个方面有出色的支持:

 常备::
  教学支持:
  * 中蟒
  * 周蟒
 深入::
  知识管理:
  * 维基
 前沿::
  教育体制支持:
  * attachment:Pippy-icon.png Pippy ~ OLPC 计划使用的窗口系统 Sugar 的开发脚本
  * 教程地址: http://wiki.laptop.org/go/Pippy
  * 精巧地址: http://bit.ly/UjyDx
 



##endInc
= 资源回收 =
  * Python 指南: http://doc.chinahtml.com/Manual/Python/tut/tut.html
   * 精巧地址: http://bit.ly/hTbof
  * 开始编程之旅: http://wiki.woodpecker.org.cn/moin/StartProgramming
   * 精巧地址: http://bit.ly/4bwSzl
  * Python 常用模块体验: http://wiki.woodpecker.org.cn/moin/PyCommonUsageMod
   * 精巧地址: http://bit.ly/1WiW4T
  * Effective--实效Python编程: http://wiki.woodpecker.org.cn/moin/EffectivePyPrgramming
   * 精巧地址:  http://bit.ly/47fEwY


----
'''反馈'''

创建 by -- ZoomQuiet [[[DateTime(2008-06-17T14:23:01Z)]]]
||<^>[[PageComment2]]||<^>[:/PageCommentData:PageCommentData]''||



pygame
pysonic
