.. 子模块的唯一id, 需带有依次父模块的前缀, 如果没有 modulea 时, 则不需要加 :
.. _example_modulea_a1:


.. 一级标题为方法名字 及 返回类型:

S.mix(r, s, ov, wl) - ``Object``
==========================================================


.. 描述, 写明该函数的作用 :

描述: 将 s(upplier) 对象的成员复制到 r(eceiver) 对象上
----------------------------------------------------------

.. 可以加上更多的描述 :

OOP 中的关键方法.



.. 列出各个参数 :

参数:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. 参数列表用无序列表表示 :

* **ov** : ``Boolean`` override, 表示复制时是否采用覆盖模式. 默认为 true.
* **wl** : ``Array`` whitelist, 非空时, 表示仅添加该列表中的成员.



.. 指明返回的是什么 :

返回: ``Object``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

添加新成员之后的 r 对象





.. 该方法的使用示例 :

示例
----------------------------------------------------------

.. code-block:: javascript

    var S = KISSY,
    r = { a: 'a', b: 'b' };

    S.mix(r, { c: 'c' });
    S.log(r.c); // => 'c'

    S.mix(r, { a: 'a2' }, false);
    S.log(r.a); // => 'a'

    S.mix(r, { e: 'e', f: 'f' }, true, ['f']);
    S.log(r.e); // => undefined
    S.log(r.f); // => 'f'

示例的说明文字.


.. 要特别说明的地方 :

.. note::

  该方法在 KISSY 里具有非常重要的地位. JavaScript 是一门动态语言, 利用 mixin 特性, 可以很方便的实现特性的静态复制和动态修改 .



.. 警告 :

.. warning::

  mix 方法怎么怎么样. [1]_ 



.. 指明参考链接 :

.. rubric:: 参考链接

.. [1] `kwicks 示范 <http://eyedraw.eu/>`_